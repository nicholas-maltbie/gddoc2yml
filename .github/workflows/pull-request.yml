name: Pull Request Validation

on:
  pull_request:
    branches: [ "main" ]

concurrency:
  group: pull_request-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  validation:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.9", "3.10", "3.11", "3.12" ]
        dotnet-version: [ '6.0.x' ]

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Setup Dotnet 6.0.x
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '6.0.x'
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install build flake8 coverage twine
        python -m pip install -r requirements.txt
        dotnet tool restore
    - name: Verify Build and Package
      run: |
        python -m build
        python -m twine check dist/*
    - name: Lint With Flake8
      run: |
        flake8 . --show-source
    - name: Run Tests and Coverage Report
      run: |
        coverage run -m unittest discover
        coverage report -m
    - name: Test Build Site
      run: |
        python3 -m pip install .
        gdxml2yml godot/doc/classes godot/modules godot/platform/android/doc_classes godot/platform/ios/doc_classes godot/platform/linuxbsd/doc_classes platform/macos/doc_classes platform/web/doc_classes platform/windows/doc_classes doc/api
        dotnet tool run docfx doc/docfx.json

  markdown-lint:
    name: ðŸ§¹ Markdown lint
    runs-on: "ubuntu-20.04"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - run: npm install -g markdownlint-cli
      - run: markdownlint .
