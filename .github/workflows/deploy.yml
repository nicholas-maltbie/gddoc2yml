name: Deploy

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

concurrency:
  group: deploy-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.9", "3.10", "3.11", "3.12" ]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install build flake8 coverage twine
        python -m pip install -r requirements.txt
    - name: Verify Build and Package
      run: |
        python -m build
        python -m twine check dist/*
    - name: Lint With Flake8
      run: |
        flake8 . --show-source
    - name: Run Tests and Coverage Report
      run: |
        coverage run -m unittest discover
        coverage report -m

  build:
    needs: test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: "3.12"
    - name: Setup Dotnet 6.0.x
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '6.0.x'
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        dotnet tool restore
    - name: Build Site
      run: |
        python3 -m pip install .
        gdxml2yml godot/doc/classes godot/modules godot/platform/android/doc_classes godot/platform/ios/doc_classes godot/platform/linuxbsd/doc_classes platform/macos/doc_classes platform/web/doc_classes platform/windows/doc_classes doc/api
        dotnet tool run docfx doc/docfx.json
    - name: Fix permissions
      run: |
        chmod -c -R +rX "doc/_site/" | while read line; do
          echo "::warning title=Invalid file permissions automatically fixed::$line"
        done
    - name: Upload Site Artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: doc/_site
        name: github-pages

  # Deploy job
  deploy:
    # Add a dependency to the build job
    needs: build

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
