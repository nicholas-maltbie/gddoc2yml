<?xml version="1.0" encoding="UTF-8" ?>
<class name="Node3D" inherits="Node" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../class.xsd">
	<brief_description>
	</brief_description>
	<description>
	</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="add_gizmo">
			<return type="void" />
			<param index="0" name="gizmo" type="Node3DGizmo" />
			<description>
			</description>
		</method>
		<method name="clear_gizmos">
			<return type="void" />
			<description>
			</description>
		</method>
		<method name="clear_subgizmo_selection">
			<return type="void" />
			<description>
			</description>
		</method>
		<method name="force_update_transform">
			<return type="void" />
			<description>
			</description>
		</method>
		<method name="get_gizmos" qualifiers="const">
			<return type="Node3DGizmo[]" />
			<description>
			</description>
		</method>
		<method name="get_parent_node_3d" qualifiers="const">
			<return type="Node3D" />
			<description>
			</description>
		</method>
		<method name="get_world_3d" qualifiers="const">
			<return type="World3D" />
			<description>
			</description>
		</method>
		<method name="global_rotate">
			<return type="void" />
			<param index="0" name="axis" type="Vector3" />
			<param index="1" name="angle" type="float" />
			<description>
			</description>
		</method>
		<method name="global_scale">
			<return type="void" />
			<param index="0" name="scale" type="Vector3" />
			<description>
			</description>
		</method>
		<method name="global_translate">
			<return type="void" />
			<param index="0" name="offset" type="Vector3" />
			<description>
			</description>
		</method>
		<method name="hide">
			<return type="void" />
			<description>
			</description>
		</method>
		<method name="is_local_transform_notification_enabled" qualifiers="const">
			<return type="bool" />
			<description>
			</description>
		</method>
		<method name="is_scale_disabled" qualifiers="const">
			<return type="bool" />
			<description>
			</description>
		</method>
		<method name="is_transform_notification_enabled" qualifiers="const">
			<return type="bool" />
			<description>
			</description>
		</method>
		<method name="is_visible_in_tree" qualifiers="const">
			<return type="bool" />
			<description>
			</description>
		</method>
		<method name="look_at">
			<return type="void" />
			<param index="0" name="target" type="Vector3" />
			<param index="1" name="up" type="Vector3" default="Vector3(0, 1, 0)" />
			<param index="2" name="use_model_front" type="bool" default="false" />
			<description>
			</description>
		</method>
		<method name="look_at_from_position">
			<return type="void" />
			<param index="0" name="position" type="Vector3" />
			<param index="1" name="target" type="Vector3" />
			<param index="2" name="up" type="Vector3" default="Vector3(0, 1, 0)" />
			<param index="3" name="use_model_front" type="bool" default="false" />
			<description>
			</description>
		</method>
		<method name="orthonormalize">
			<return type="void" />
			<description>
			</description>
		</method>
		<method name="rotate">
			<return type="void" />
			<param index="0" name="axis" type="Vector3" />
			<param index="1" name="angle" type="float" />
			<description>
			</description>
		</method>
		<method name="rotate_object_local">
			<return type="void" />
			<param index="0" name="axis" type="Vector3" />
			<param index="1" name="angle" type="float" />
			<description>
			</description>
		</method>
		<method name="rotate_x">
			<return type="void" />
			<param index="0" name="angle" type="float" />
			<description>
			</description>
		</method>
		<method name="rotate_y">
			<return type="void" />
			<param index="0" name="angle" type="float" />
			<description>
			</description>
		</method>
		<method name="rotate_z">
			<return type="void" />
			<param index="0" name="angle" type="float" />
			<description>
			</description>
		</method>
		<method name="scale_object_local">
			<return type="void" />
			<param index="0" name="scale" type="Vector3" />
			<description>
			</description>
		</method>
		<method name="set_disable_scale">
			<return type="void" />
			<param index="0" name="disable" type="bool" />
			<description>
			</description>
		</method>
		<method name="set_identity">
			<return type="void" />
			<description>
			</description>
		</method>
		<method name="set_ignore_transform_notification">
			<return type="void" />
			<param index="0" name="enabled" type="bool" />
			<description>
			</description>
		</method>
		<method name="set_notify_local_transform">
			<return type="void" />
			<param index="0" name="enable" type="bool" />
			<description>
			</description>
		</method>
		<method name="set_notify_transform">
			<return type="void" />
			<param index="0" name="enable" type="bool" />
			<description>
			</description>
		</method>
		<method name="set_subgizmo_selection">
			<return type="void" />
			<param index="0" name="gizmo" type="Node3DGizmo" />
			<param index="1" name="id" type="int" />
			<param index="2" name="transform" type="Transform3D" />
			<description>
			</description>
		</method>
		<method name="show">
			<return type="void" />
			<description>
			</description>
		</method>
		<method name="to_global" qualifiers="const">
			<return type="Vector3" />
			<param index="0" name="local_point" type="Vector3" />
			<description>
			</description>
		</method>
		<method name="to_local" qualifiers="const">
			<return type="Vector3" />
			<param index="0" name="global_point" type="Vector3" />
			<description>
			</description>
		</method>
		<method name="translate">
			<return type="void" />
			<param index="0" name="offset" type="Vector3" />
			<description>
			</description>
		</method>
		<method name="translate_object_local">
			<return type="void" />
			<param index="0" name="offset" type="Vector3" />
			<description>
			</description>
		</method>
		<method name="update_gizmos">
			<return type="void" />
			<description>
			</description>
		</method>
	</methods>
	<members>
		<member name="basis" type="Basis" setter="set_basis" getter="get_basis">
		</member>
		<member name="global_basis" type="Basis" setter="set_global_basis" getter="get_global_basis">
		</member>
		<member name="global_position" type="Vector3" setter="set_global_position" getter="get_global_position">
		</member>
		<member name="global_rotation" type="Vector3" setter="set_global_rotation" getter="get_global_rotation">
		</member>
		<member name="global_rotation_degrees" type="Vector3" setter="set_global_rotation_degrees" getter="get_global_rotation_degrees">
		</member>
		<member name="global_transform" type="Transform3D" setter="set_global_transform" getter="get_global_transform">
		</member>
		<member name="position" type="Vector3" setter="set_position" getter="get_position" default="Vector3(0, 0, 0)">
		</member>
		<member name="quaternion" type="Quaternion" setter="set_quaternion" getter="get_quaternion">
		</member>
		<member name="rotation" type="Vector3" setter="set_rotation" getter="get_rotation" default="Vector3(0, 0, 0)">
		</member>
		<member name="rotation_degrees" type="Vector3" setter="set_rotation_degrees" getter="get_rotation_degrees">
		</member>
		<member name="rotation_edit_mode" type="int" setter="set_rotation_edit_mode" getter="get_rotation_edit_mode" enum="Node3D.RotationEditMode" default="0">
		</member>
		<member name="rotation_order" type="int" setter="set_rotation_order" getter="get_rotation_order" enum="EulerOrder" default="2">
		</member>
		<member name="scale" type="Vector3" setter="set_scale" getter="get_scale" default="Vector3(1, 1, 1)">
		</member>
		<member name="top_level" type="bool" setter="set_as_top_level" getter="is_set_as_top_level" default="false">
		</member>
		<member name="transform" type="Transform3D" setter="set_transform" getter="get_transform" default="Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0)">
		</member>
		<member name="visibility_parent" type="NodePath" setter="set_visibility_parent" getter="get_visibility_parent" default="NodePath(&quot;&quot;)">
		</member>
		<member name="visible" type="bool" setter="set_visible" getter="is_visible" default="true">
		</member>
	</members>
	<signals>
		<signal name="visibility_changed">
			<description>
			</description>
		</signal>
	</signals>
	<constants>
		<constant name="NOTIFICATION_TRANSFORM_CHANGED" value="2000">
		</constant>
		<constant name="NOTIFICATION_ENTER_WORLD" value="41">
		</constant>
		<constant name="NOTIFICATION_EXIT_WORLD" value="42">
		</constant>
		<constant name="NOTIFICATION_VISIBILITY_CHANGED" value="43">
		</constant>
		<constant name="NOTIFICATION_LOCAL_TRANSFORM_CHANGED" value="44">
		</constant>
		<constant name="ROTATION_EDIT_MODE_EULER" value="0" enum="RotationEditMode">
		</constant>
		<constant name="ROTATION_EDIT_MODE_QUATERNION" value="1" enum="RotationEditMode">
		</constant>
		<constant name="ROTATION_EDIT_MODE_BASIS" value="2" enum="RotationEditMode">
		</constant>
	</constants>
</class>
